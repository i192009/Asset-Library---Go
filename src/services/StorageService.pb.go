// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: StorageService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 传入获取下载地址的参数
type DownLoadSignUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源id
	ScopeId int32 `protobuf:"varint,1,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	// 文件key
	Key              string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	UseInnerEndpoint *bool  `protobuf:"varint,10,opt,name=useInnerEndpoint,proto3,oneof" json:"useInnerEndpoint,omitempty"` // 是否使用内网地址
}

func (x *DownLoadSignUrlRequest) Reset() {
	*x = DownLoadSignUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownLoadSignUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownLoadSignUrlRequest) ProtoMessage() {}

func (x *DownLoadSignUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownLoadSignUrlRequest.ProtoReflect.Descriptor instead.
func (*DownLoadSignUrlRequest) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{0}
}

func (x *DownLoadSignUrlRequest) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *DownLoadSignUrlRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DownLoadSignUrlRequest) GetUseInnerEndpoint() bool {
	if x != nil && x.UseInnerEndpoint != nil {
		return *x.UseInnerEndpoint
	}
	return false
}

// 传入上传文件参数
type UploadFileUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源id
	ScopeId int32 `protobuf:"varint,1,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	// 文件key
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// 超时时间
	Expires int64 `protobuf:"varint,3,opt,name=expires,proto3" json:"expires,omitempty"`
	// 文件大小
	Size              int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	CustomContentType bool   `protobuf:"varint,5,opt,name=customContentType,proto3" json:"customContentType,omitempty"` // 是否自定义contentType, 该值为true时, contentType参数有效
	ContentType       string `protobuf:"bytes,6,opt,name=contentType,proto3" json:"contentType,omitempty"`
	UseInnerEndpoint  *bool  `protobuf:"varint,10,opt,name=useInnerEndpoint,proto3,oneof" json:"useInnerEndpoint,omitempty"` // 是否使用内网地址
}

func (x *UploadFileUrlRequest) Reset() {
	*x = UploadFileUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileUrlRequest) ProtoMessage() {}

func (x *UploadFileUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileUrlRequest.ProtoReflect.Descriptor instead.
func (*UploadFileUrlRequest) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileUrlRequest) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *UploadFileUrlRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UploadFileUrlRequest) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *UploadFileUrlRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadFileUrlRequest) GetCustomContentType() bool {
	if x != nil {
		return x.CustomContentType
	}
	return false
}

func (x *UploadFileUrlRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *UploadFileUrlRequest) GetUseInnerEndpoint() bool {
	if x != nil && x.UseInnerEndpoint != nil {
		return *x.UseInnerEndpoint
	}
	return false
}

// 传入获取文件大小参数
type ObjectSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源id
	ScopeId int32 `protobuf:"varint,1,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	// 文件key
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ObjectSizeRequest) Reset() {
	*x = ObjectSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSizeRequest) ProtoMessage() {}

func (x *ObjectSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSizeRequest.ProtoReflect.Descriptor instead.
func (*ObjectSizeRequest) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectSizeRequest) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *ObjectSizeRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// 传入复制对象的参数
type CopyObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源id
	ScopeId int32 `protobuf:"varint,1,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	// 文件key
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// 原来的key
	SourceKey string `protobuf:"bytes,3,opt,name=sourceKey,proto3" json:"sourceKey,omitempty"`
	// 目标桶
	Bucket string `protobuf:"bytes,4,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *CopyObjectRequest) Reset() {
	*x = CopyObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyObjectRequest) ProtoMessage() {}

func (x *CopyObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyObjectRequest.ProtoReflect.Descriptor instead.
func (*CopyObjectRequest) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{3}
}

func (x *CopyObjectRequest) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *CopyObjectRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CopyObjectRequest) GetSourceKey() string {
	if x != nil {
		return x.SourceKey
	}
	return ""
}

func (x *CopyObjectRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type MetaDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 元数据id
	MetaId string `protobuf:"bytes,1,opt,name=MetaId,proto3" json:"MetaId,omitempty"`
	AppId  string `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *MetaDataRequest) Reset() {
	*x = MetaDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataRequest) ProtoMessage() {}

func (x *MetaDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataRequest.ProtoReflect.Descriptor instead.
func (*MetaDataRequest) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{4}
}

func (x *MetaDataRequest) GetMetaId() string {
	if x != nil {
		return x.MetaId
	}
	return ""
}

func (x *MetaDataRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type ObjectMetaDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源id
	ScopeId int32 `protobuf:"varint,1,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	// 应用id
	AppId string `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	// 用户id
	OpenId string `protobuf:"bytes,3,opt,name=openId,proto3" json:"openId,omitempty"`
	// 文件key
	Key string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// 文件名称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// 文件类型
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// 备注
	Remark string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	// 用户数据
	UserData string `protobuf:"bytes,8,opt,name=userData,proto3" json:"userData,omitempty"`
	// 元数据id
	MetaId    string `protobuf:"bytes,9,opt,name=MetaId,proto3" json:"MetaId,omitempty"`
	SpaceSize int64  `protobuf:"varint,10,opt,name=spaceSize,proto3" json:"spaceSize,omitempty"`
}

func (x *ObjectMetaDataRequest) Reset() {
	*x = ObjectMetaDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectMetaDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectMetaDataRequest) ProtoMessage() {}

func (x *ObjectMetaDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectMetaDataRequest.ProtoReflect.Descriptor instead.
func (*ObjectMetaDataRequest) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{5}
}

func (x *ObjectMetaDataRequest) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *ObjectMetaDataRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ObjectMetaDataRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ObjectMetaDataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ObjectMetaDataRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectMetaDataRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ObjectMetaDataRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ObjectMetaDataRequest) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

func (x *ObjectMetaDataRequest) GetMetaId() string {
	if x != nil {
		return x.MetaId
	}
	return ""
}

func (x *ObjectMetaDataRequest) GetSpaceSize() int64 {
	if x != nil {
		return x.SpaceSize
	}
	return 0
}

type MetaDataListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaDatas []*MetaDataListReply_MetaData `protobuf:"bytes,1,rep,name=MetaDatas,proto3" json:"MetaDatas,omitempty"`
}

func (x *MetaDataListReply) Reset() {
	*x = MetaDataListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataListReply) ProtoMessage() {}

func (x *MetaDataListReply) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataListReply.ProtoReflect.Descriptor instead.
func (*MetaDataListReply) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{6}
}

func (x *MetaDataListReply) GetMetaDatas() []*MetaDataListReply_MetaData {
	if x != nil {
		return x.MetaDatas
	}
	return nil
}

type UrlReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UrlReply) Reset() {
	*x = UrlReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlReply) ProtoMessage() {}

func (x *UrlReply) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlReply.ProtoReflect.Descriptor instead.
func (*UrlReply) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{7}
}

func (x *UrlReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type MetaDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaId  string `protobuf:"bytes,1,opt,name=MetaId,proto3" json:"MetaId,omitempty"`
	Version int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MetaDataReply) Reset() {
	*x = MetaDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataReply) ProtoMessage() {}

func (x *MetaDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataReply.ProtoReflect.Descriptor instead.
func (*MetaDataReply) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{8}
}

func (x *MetaDataReply) GetMetaId() string {
	if x != nil {
		return x.MetaId
	}
	return ""
}

func (x *MetaDataReply) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ObjectSizeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ObjectSizeReply) Reset() {
	*x = ObjectSizeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectSizeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSizeReply) ProtoMessage() {}

func (x *ObjectSizeReply) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSizeReply.ProtoReflect.Descriptor instead.
func (*ObjectSizeReply) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{9}
}

func (x *ObjectSizeReply) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CopyObjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CopyObjectReply) Reset() {
	*x = CopyObjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyObjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyObjectReply) ProtoMessage() {}

func (x *CopyObjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyObjectReply.ProtoReflect.Descriptor instead.
func (*CopyObjectReply) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{10}
}

type C2S_PutObjectWithBytesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,10,opt,name=key,proto3" json:"key,omitempty"`
	ScopeId int32  `protobuf:"varint,20,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Expires string `protobuf:"bytes,30,opt,name=expires,proto3" json:"expires,omitempty"`
	File    []byte `protobuf:"bytes,40,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *C2S_PutObjectWithBytesReq) Reset() {
	*x = C2S_PutObjectWithBytesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_PutObjectWithBytesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_PutObjectWithBytesReq) ProtoMessage() {}

func (x *C2S_PutObjectWithBytesReq) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_PutObjectWithBytesReq.ProtoReflect.Descriptor instead.
func (*C2S_PutObjectWithBytesReq) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{11}
}

func (x *C2S_PutObjectWithBytesReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *C2S_PutObjectWithBytesReq) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *C2S_PutObjectWithBytesReq) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

func (x *C2S_PutObjectWithBytesReq) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type C2S_PutObjectWithBytesRpn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2S_PutObjectWithBytesRpn) Reset() {
	*x = C2S_PutObjectWithBytesRpn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_PutObjectWithBytesRpn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_PutObjectWithBytesRpn) ProtoMessage() {}

func (x *C2S_PutObjectWithBytesRpn) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_PutObjectWithBytesRpn.ProtoReflect.Descriptor instead.
func (*C2S_PutObjectWithBytesRpn) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{12}
}

type C2S_GetScopeInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScopeId int32 `protobuf:"varint,10,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
}

func (x *C2S_GetScopeInfoReq) Reset() {
	*x = C2S_GetScopeInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetScopeInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetScopeInfoReq) ProtoMessage() {}

func (x *C2S_GetScopeInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetScopeInfoReq.ProtoReflect.Descriptor instead.
func (*C2S_GetScopeInfoReq) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{13}
}

func (x *C2S_GetScopeInfoReq) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

type C2S_GetScopeInfoRpn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScopeId       int32  `protobuf:"varint,10,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	ScopeConfigId int32  `protobuf:"varint,20,opt,name=scopeConfigId,proto3" json:"scopeConfigId,omitempty"`
	AccessKey     string `protobuf:"bytes,30,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	SecretKey     string `protobuf:"bytes,40,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	Endpoint      string `protobuf:"bytes,50,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Bucket        string `protobuf:"bytes,60,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *C2S_GetScopeInfoRpn) Reset() {
	*x = C2S_GetScopeInfoRpn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetScopeInfoRpn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetScopeInfoRpn) ProtoMessage() {}

func (x *C2S_GetScopeInfoRpn) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetScopeInfoRpn.ProtoReflect.Descriptor instead.
func (*C2S_GetScopeInfoRpn) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{14}
}

func (x *C2S_GetScopeInfoRpn) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *C2S_GetScopeInfoRpn) GetScopeConfigId() int32 {
	if x != nil {
		return x.ScopeConfigId
	}
	return 0
}

func (x *C2S_GetScopeInfoRpn) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *C2S_GetScopeInfoRpn) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *C2S_GetScopeInfoRpn) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *C2S_GetScopeInfoRpn) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type C2S_ListObjectsReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScopeId        int32           `protobuf:"varint,10,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	ListObjectsReq *ListObjectsReq `protobuf:"bytes,20,opt,name=listObjectsReq,proto3" json:"listObjectsReq,omitempty"`
}

func (x *C2S_ListObjectsReqT) Reset() {
	*x = C2S_ListObjectsReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_ListObjectsReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_ListObjectsReqT) ProtoMessage() {}

func (x *C2S_ListObjectsReqT) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_ListObjectsReqT.ProtoReflect.Descriptor instead.
func (*C2S_ListObjectsReqT) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{15}
}

func (x *C2S_ListObjectsReqT) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *C2S_ListObjectsReqT) GetListObjectsReq() *ListObjectsReq {
	if x != nil {
		return x.ListObjectsReq
	}
	return nil
}

type C2S_ListObjectsRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket         string           `protobuf:"bytes,10,opt,name=bucket,proto3" json:"bucket,omitempty"`                 // 桶名
	Truncated      bool             `protobuf:"varint,20,opt,name=truncated,proto3" json:"truncated,omitempty"`          // 每次至多返回1000个对象,如果指定桶包含的对象数量大于1000,则该值为true
	NextMarker     string           `protobuf:"bytes,30,opt,name=nextMarker,proto3" json:"nextMarker,omitempty"`         // 每次至多返回1000个对象,如果指定桶包含的对象数量大于1000,可通过该值获取下次列举的起始位置
	CommonPrefixes []string         `protobuf:"bytes,40,rep,name=commonPrefixes,proto3" json:"commonPrefixes,omitempty"` // 文件夹的子文件夹
	Delimiter      string           `protobuf:"bytes,50,opt,name=delimiter,proto3" json:"delimiter,omitempty"`           //
	MaxKeys        int32            `protobuf:"varint,60,opt,name=maxKeys,proto3" json:"maxKeys,omitempty"`              //
	Prefix         string           `protobuf:"bytes,70,opt,name=prefix,proto3" json:"prefix,omitempty"`                 //
	StorageObjects []*StorageObject `protobuf:"bytes,80,rep,name=storageObjects,proto3" json:"storageObjects,omitempty"` // 文件夹/文件对象, 注意 这个会把文件夹一起返回, 可通过判断最后一位是不是"/"来进行区分
}

func (x *C2S_ListObjectsRpnT) Reset() {
	*x = C2S_ListObjectsRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_ListObjectsRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_ListObjectsRpnT) ProtoMessage() {}

func (x *C2S_ListObjectsRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_ListObjectsRpnT.ProtoReflect.Descriptor instead.
func (*C2S_ListObjectsRpnT) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{16}
}

func (x *C2S_ListObjectsRpnT) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *C2S_ListObjectsRpnT) GetTruncated() bool {
	if x != nil {
		return x.Truncated
	}
	return false
}

func (x *C2S_ListObjectsRpnT) GetNextMarker() string {
	if x != nil {
		return x.NextMarker
	}
	return ""
}

func (x *C2S_ListObjectsRpnT) GetCommonPrefixes() []string {
	if x != nil {
		return x.CommonPrefixes
	}
	return nil
}

func (x *C2S_ListObjectsRpnT) GetDelimiter() string {
	if x != nil {
		return x.Delimiter
	}
	return ""
}

func (x *C2S_ListObjectsRpnT) GetMaxKeys() int32 {
	if x != nil {
		return x.MaxKeys
	}
	return 0
}

func (x *C2S_ListObjectsRpnT) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *C2S_ListObjectsRpnT) GetStorageObjects() []*StorageObject {
	if x != nil {
		return x.StorageObjects
	}
	return nil
}

type ListObjectsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix    string `protobuf:"bytes,10,opt,name=prefix,proto3" json:"prefix,omitempty"`       // 限定返回的对象名必须带有prefix前缀
	Marker    string `protobuf:"bytes,20,opt,name=marker,proto3" json:"marker,omitempty"`       // 列举对象的起始位置，返回的对象列表将是对象名按照字典序排序后该参数以后的所有对象
	MaxKeys   int32  `protobuf:"varint,30,opt,name=maxKeys,proto3" json:"maxKeys,omitempty"`    // 列举对象的最大数目，取值范围为1~1000，当超出范围时，按照默认的1000进行处理。
	Delimiter string `protobuf:"bytes,40,opt,name=delimiter,proto3" json:"delimiter,omitempty"` // 用于对对象名进行分组的字符。对于对象名中包含delimiter的对象，其对象名（如果请求中指定了prefix，则此处的对象名需要去掉prefix）中从首字符至第一个delimiter之间的字符串将作为一个分组并作为commonPrefix返回。
}

func (x *ListObjectsReq) Reset() {
	*x = ListObjectsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectsReq) ProtoMessage() {}

func (x *ListObjectsReq) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectsReq.ProtoReflect.Descriptor instead.
func (*ListObjectsReq) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{17}
}

func (x *ListObjectsReq) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ListObjectsReq) GetMarker() string {
	if x != nil {
		return x.Marker
	}
	return ""
}

func (x *ListObjectsReq) GetMaxKeys() int32 {
	if x != nil {
		return x.MaxKeys
	}
	return 0
}

func (x *ListObjectsReq) GetDelimiter() string {
	if x != nil {
		return x.Delimiter
	}
	return ""
}

type StorageObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectKey string `protobuf:"bytes,10,opt,name=objectKey,proto3" json:"objectKey,omitempty"` // 对象在存储上的key
}

func (x *StorageObject) Reset() {
	*x = StorageObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageObject) ProtoMessage() {}

func (x *StorageObject) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageObject.ProtoReflect.Descriptor instead.
func (*StorageObject) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{18}
}

func (x *StorageObject) GetObjectKey() string {
	if x != nil {
		return x.ObjectKey
	}
	return ""
}

type MetaDataListReply_MetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源id
	ScopeId int32 `protobuf:"varint,1,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	// 应用id
	AppId string `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	// 用户id
	OpenId string `protobuf:"bytes,3,opt,name=openId,proto3" json:"openId,omitempty"`
	// 文件key
	Key string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// 文件名称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// 文件类型
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// 备注
	Remark string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	// 用户数据
	UserData string `protobuf:"bytes,8,opt,name=userData,proto3" json:"userData,omitempty"`
	// 版本
	Version int32 `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	// 元数据id
	MetaId    string `protobuf:"bytes,10,opt,name=MetaId,proto3" json:"MetaId,omitempty"`
	SpaceSize int64  `protobuf:"varint,11,opt,name=spaceSize,proto3" json:"spaceSize,omitempty"`
}

func (x *MetaDataListReply_MetaData) Reset() {
	*x = MetaDataListReply_MetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StorageService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataListReply_MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataListReply_MetaData) ProtoMessage() {}

func (x *MetaDataListReply_MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataListReply_MetaData.ProtoReflect.Descriptor instead.
func (*MetaDataListReply_MetaData) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{6, 0}
}

func (x *MetaDataListReply_MetaData) GetScopeId() int32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *MetaDataListReply_MetaData) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *MetaDataListReply_MetaData) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *MetaDataListReply_MetaData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MetaDataListReply_MetaData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetaDataListReply_MetaData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MetaDataListReply_MetaData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MetaDataListReply_MetaData) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

func (x *MetaDataListReply_MetaData) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MetaDataListReply_MetaData) GetMetaId() string {
	if x != nil {
		return x.MetaId
	}
	return ""
}

func (x *MetaDataListReply_MetaData) GetSpaceSize() int64 {
	if x != nil {
		return x.SpaceSize
	}
	return 0
}

var File_StorageService_proto protoreflect.FileDescriptor

var file_StorageService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65,
	0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a,
	0x01, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x10, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x75, 0x73, 0x65, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x86, 0x02, 0x0a, 0x14,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f,
	0x0a, 0x10, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x10, 0x75, 0x73, 0x65, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x11, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x75, 0x0a, 0x11, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x3f, 0x0a, 0x0f,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x83, 0x02,
	0x0a, 0x15, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xf8, 0x02, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x50, 0x0a, 0x09, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x73, 0x1a, 0x90, 0x02, 0x0a, 0x08,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x61,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x1c,
	0x0a, 0x08, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x41, 0x0a, 0x0d,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x25, 0x0a, 0x0f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x75, 0x0a, 0x19, 0x43, 0x32, 0x53,
	0x5f, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0x1b, 0x0a, 0x19, 0x43, 0x32, 0x53, 0x5f, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x70, 0x6e, 0x22, 0x2f, 0x0a,
	0x13, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x22, 0xc5,
	0x01, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x70, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x43, 0x32, 0x53, 0x5f, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x6c, 0x69, 0x73,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x22, 0xb3, 0x02, 0x0a, 0x14, 0x43, 0x32,
	0x53, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x70, 0x6e,
	0x5f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72,
	0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65,
	0x78, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x61, 0x78, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x61, 0x78, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x4d, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x50, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a,
	0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22,
	0x78, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x0d, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x32, 0xe2, 0x08, 0x0a, 0x12, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x68, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x69,
	0x67, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65,
	0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65,
	0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x65, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a,
	0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69,
	0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4d, 0x65, 0x74, 0x61, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65,
	0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0a, 0x63,
	0x6f, 0x70, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x6f,
	0x70, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x7c, 0x0a, 0x12, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65,
	0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x43,
	0x32, 0x53, 0x5f, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a,
	0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x70, 0x6e, 0x22, 0x00, 0x12, 0x84, 0x01,
	0x0a, 0x18, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x50, 0x75, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x70, 0x6e,
	0x22, 0x00, 0x28, 0x01, 0x12, 0x6a, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x32,
	0x53, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x70, 0x6e, 0x22, 0x00,
	0x12, 0x6b, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x2c, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x22, 0x00, 0x42, 0x44, 0x0a,
	0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x6c, 0x69, 0x62, 0x42, 0x17, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_StorageService_proto_rawDescOnce sync.Once
	file_StorageService_proto_rawDescData = file_StorageService_proto_rawDesc
)

func file_StorageService_proto_rawDescGZIP() []byte {
	file_StorageService_proto_rawDescOnce.Do(func() {
		file_StorageService_proto_rawDescData = protoimpl.X.CompressGZIP(file_StorageService_proto_rawDescData)
	})
	return file_StorageService_proto_rawDescData
}

var file_StorageService_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_StorageService_proto_goTypes = []interface{}{
	(*DownLoadSignUrlRequest)(nil),     // 0: com.zixel.file.backend.DownLoadSignUrlRequest
	(*UploadFileUrlRequest)(nil),       // 1: com.zixel.file.backend.UploadFileUrlRequest
	(*ObjectSizeRequest)(nil),          // 2: com.zixel.file.backend.ObjectSizeRequest
	(*CopyObjectRequest)(nil),          // 3: com.zixel.file.backend.CopyObjectRequest
	(*MetaDataRequest)(nil),            // 4: com.zixel.file.backend.MetaDataRequest
	(*ObjectMetaDataRequest)(nil),      // 5: com.zixel.file.backend.ObjectMetaDataRequest
	(*MetaDataListReply)(nil),          // 6: com.zixel.file.backend.MetaDataListReply
	(*UrlReply)(nil),                   // 7: com.zixel.file.backend.UrlReply
	(*MetaDataReply)(nil),              // 8: com.zixel.file.backend.MetaDataReply
	(*ObjectSizeReply)(nil),            // 9: com.zixel.file.backend.ObjectSizeReply
	(*CopyObjectReply)(nil),            // 10: com.zixel.file.backend.CopyObjectReply
	(*C2S_PutObjectWithBytesReq)(nil),  // 11: com.zixel.file.backend.C2S_PutObjectWithBytesReq
	(*C2S_PutObjectWithBytesRpn)(nil),  // 12: com.zixel.file.backend.C2S_PutObjectWithBytesRpn
	(*C2S_GetScopeInfoReq)(nil),        // 13: com.zixel.file.backend.C2S_GetScopeInfoReq
	(*C2S_GetScopeInfoRpn)(nil),        // 14: com.zixel.file.backend.C2S_GetScopeInfoRpn
	(*C2S_ListObjectsReqT)(nil),        // 15: com.zixel.file.backend.C2S_ListObjectsReq_t
	(*C2S_ListObjectsRpnT)(nil),        // 16: com.zixel.file.backend.C2S_ListObjectsRpn_t
	(*ListObjectsReq)(nil),             // 17: com.zixel.file.backend.ListObjectsReq
	(*StorageObject)(nil),              // 18: com.zixel.file.backend.StorageObject
	(*MetaDataListReply_MetaData)(nil), // 19: com.zixel.file.backend.MetaDataListReply.MetaData
}
var file_StorageService_proto_depIdxs = []int32{
	19, // 0: com.zixel.file.backend.MetaDataListReply.MetaDatas:type_name -> com.zixel.file.backend.MetaDataListReply.MetaData
	17, // 1: com.zixel.file.backend.C2S_ListObjectsReq_t.listObjectsReq:type_name -> com.zixel.file.backend.ListObjectsReq
	18, // 2: com.zixel.file.backend.C2S_ListObjectsRpn_t.storageObjects:type_name -> com.zixel.file.backend.StorageObject
	0,  // 3: com.zixel.file.backend.FileManagerService.GetDownLoadSignUrl:input_type -> com.zixel.file.backend.DownLoadSignUrlRequest
	1,  // 4: com.zixel.file.backend.FileManagerService.GetUploadFileUrl:input_type -> com.zixel.file.backend.UploadFileUrlRequest
	2,  // 5: com.zixel.file.backend.FileManagerService.GetObjectSize:input_type -> com.zixel.file.backend.ObjectSizeRequest
	5,  // 6: com.zixel.file.backend.FileManagerService.createMetaData:input_type -> com.zixel.file.backend.ObjectMetaDataRequest
	4,  // 7: com.zixel.file.backend.FileManagerService.queryHistoryMetas:input_type -> com.zixel.file.backend.MetaDataRequest
	3,  // 8: com.zixel.file.backend.FileManagerService.copyObject:input_type -> com.zixel.file.backend.CopyObjectRequest
	11, // 9: com.zixel.file.backend.FileManagerService.putObjectWithBytes:input_type -> com.zixel.file.backend.C2S_PutObjectWithBytesReq
	11, // 10: com.zixel.file.backend.FileManagerService.putObjectWithBytesStream:input_type -> com.zixel.file.backend.C2S_PutObjectWithBytesReq
	13, // 11: com.zixel.file.backend.FileManagerService.getScopeInfo:input_type -> com.zixel.file.backend.C2S_GetScopeInfoReq
	15, // 12: com.zixel.file.backend.FileManagerService.ListObjects:input_type -> com.zixel.file.backend.C2S_ListObjectsReq_t
	7,  // 13: com.zixel.file.backend.FileManagerService.GetDownLoadSignUrl:output_type -> com.zixel.file.backend.UrlReply
	7,  // 14: com.zixel.file.backend.FileManagerService.GetUploadFileUrl:output_type -> com.zixel.file.backend.UrlReply
	9,  // 15: com.zixel.file.backend.FileManagerService.GetObjectSize:output_type -> com.zixel.file.backend.ObjectSizeReply
	8,  // 16: com.zixel.file.backend.FileManagerService.createMetaData:output_type -> com.zixel.file.backend.MetaDataReply
	6,  // 17: com.zixel.file.backend.FileManagerService.queryHistoryMetas:output_type -> com.zixel.file.backend.MetaDataListReply
	10, // 18: com.zixel.file.backend.FileManagerService.copyObject:output_type -> com.zixel.file.backend.CopyObjectReply
	12, // 19: com.zixel.file.backend.FileManagerService.putObjectWithBytes:output_type -> com.zixel.file.backend.C2S_PutObjectWithBytesRpn
	12, // 20: com.zixel.file.backend.FileManagerService.putObjectWithBytesStream:output_type -> com.zixel.file.backend.C2S_PutObjectWithBytesRpn
	14, // 21: com.zixel.file.backend.FileManagerService.getScopeInfo:output_type -> com.zixel.file.backend.C2S_GetScopeInfoRpn
	16, // 22: com.zixel.file.backend.FileManagerService.ListObjects:output_type -> com.zixel.file.backend.C2S_ListObjectsRpn_t
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_StorageService_proto_init() }
func file_StorageService_proto_init() {
	if File_StorageService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_StorageService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownLoadSignUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectMetaDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectSizeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyObjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_PutObjectWithBytesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_PutObjectWithBytesRpn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetScopeInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetScopeInfoRpn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_ListObjectsReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_ListObjectsRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StorageService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataListReply_MetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_StorageService_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_StorageService_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_StorageService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_StorageService_proto_goTypes,
		DependencyIndexes: file_StorageService_proto_depIdxs,
		MessageInfos:      file_StorageService_proto_msgTypes,
	}.Build()
	File_StorageService_proto = out.File
	file_StorageService_proto_rawDesc = nil
	file_StorageService_proto_goTypes = nil
	file_StorageService_proto_depIdxs = nil
}
